@page "/polls/"
@using System.Net.Http.Json
@using PollsAppBlazor.Shared.Polls
@using Microsoft.AspNetCore.Authorization
@inject PublicClient PublicClient
@inject ISnackbar Snackbar

<MudButton Variant="Variant.Filled" Color="Color.Success"
		   StartIcon="@Icons.Material.Filled.AddCircleOutline" Href="/polls/create">
	Create
</MudButton>
@if (polls == null)
{
	<p>Loading...</p>
}
<MudDataGrid T="PollPreviewDto" Items="@polls" Filterable="false" SortMode="@SortMode.None"
			 Groupable="false">
	<Columns>
		<PropertyColumn Property="p => p!.Title">
			<CellTemplate>
				<MudLink Href="@($"/polls/{context.Item!.Id}")">@context.Item!.Title</MudLink>
			</CellTemplate>
		</PropertyColumn>
		<PropertyColumn Property="p => p!.Creator" Title="Published by" />
		<PropertyColumn Property="p => p!.CreationDate.AsTimeAgo()" Title="Published" />
	</Columns>
</MudDataGrid>

@code {
	public IEnumerable<PollPreviewDto>? polls;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			polls = await PublicClient.Client.GetFromJsonAsync<IEnumerable<PollPreviewDto>>("/api/polls");
		}
		catch (HttpRequestException)
		{
			Snackbar.UnexpectedError();
		}
	}
}
